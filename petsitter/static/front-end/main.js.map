{"version":3,"sources":["./src/app/signin/signin.component.html","./src/app/signin/signin.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/humans/humans.component.html","./src/app/humans/humans.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/pets/pets.component.ts","./src/app/pets/pets.component.html","./src/app/signup/signup.component.html","./src/app/signup/signup.component.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container\">\n  <div *ngIf=\"!token\" class=\"form\">\n    <h1>Log in:</h1>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter your username</mat-label>\n      <input\n        matInput\n        placeholder=\"Username\"\n        name=\"login-username\"\n        [(ngModel)]=\"user.username\"\n      /> </mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter your password</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        placeholder=\"Password\"\n        name=\"login-password\"\n        [(ngModel)]=\"user.password\"\n      /> </mat-form-field\n    ><br />\n    <button (click)=\"login()\" mat-stroked-button color=\"primary\">Log In</button>\n    <p>{{ error }}</p>\n  </div>\n\n  <div *ngIf=\"token\">\n    <div>\n      <h1>You are logged in as {{ name }}.</h1>\n      <br />\n      <button mat-button (click)=\"logout()\" class=\"btn btn-primary\">\n        Log Out</button\n      >&nbsp;\n      <button mat-button routerLink=\"..\" class=\"btn btn-primary\">Home</button\n      >&nbsp;\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  constructor(public userService: UserService) {}\n\n  user: any;\n  token: any;\n  name: any;\n  error = '';\n  ngOnInit(): void {\n    this.user = {\n      username: '',\n      password: '',\n    };\n    this.token = this.userService.getToken();\n    this.name = sessionStorage.getItem('username');\n  }\n  login() {\n    this.error = '';\n    this.userService.login({\n      username: this.user.username,\n      password: this.user.password,\n    });\n    this.token = this.userService.getToken();\n    console.log(this.userService.errors);\n    this.error = this.userService.errors;\n    //\n  }\n\n  refreshToken() {\n    this.userService.refreshToken();\n    this.token = this.userService.getToken();\n  }\n\n  logout() {\n    this.userService.logout();\n    this.token = this.userService.getToken();\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"!isLoggedIn\">\n    <h2>Welcome to the petsitter app!</h2>\n    <p>Make sure you're logged in before you try and use this app.</p>\n    <button mat-button routerLink=\"sign-in\">Sign in</button>\n    <button mat-button routerLink=\"sign-up\">Sign Up</button>\n  </div>\n  <div *ngIf=\"isLoggedIn\">\n    <h2>Welcome {{ username }}!</h2>\n    <p>Who are you?</p>\n    <button mat-button routerLink=\"pets\">Pet Owner</button>\n    <button mat-button routerLink=\"profile\">Pet Sitter</button>\n    <br /><br /><br />\n    <button mat-button (click)=\"logout()\">Log Out</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private userService: UserService) {}\n\n  isLoggedIn = false;\n  username: any;\n  ngOnInit(): void {\n    if (this.userService.getToken()) {\n      this.username = sessionStorage.getItem('username');\n      this.isLoggedIn = true;\n      console.log(this.isLoggedIn);\n    }\n  }\n  logout() {\n    this.userService.logout();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h2 class=\"mt-3\">Pet sitters available in your area:</h2>\n<div class=\"cards\">\n  <div class=\"card\" *ngFor=\"let profile of humans\">\n    <img\n      *ngIf=\"!profile.picture\"\n      src=\"https://t3.ftcdn.net/jpg/03/46/83/96/360_F_346839683_6nAPzbhpSkIpb8pmAwufkC7c5eD7wYws.jpg\"\n      alt=\"Avatar\"\n    />\n    <img *ngIf=\"profile.picture\" src=\"{{ profile.picture }}\" alt=\"Avatar\" />\n    <div class=\"container\">\n      <h4>\n        <b>{{ profile.first_name }} {{ profile.last_name }}</b>\n      </h4>\n      <hr />\n      <p matLine>Rate per hour: {{ profile.rate_per_hour }}</p>\n      <p matLine class=\"demo-2\">Location: {{ profile.city }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-humans',\n  templateUrl: './humans.component.html',\n  styleUrls: ['./humans.component.scss'],\n})\nexport class HumansComponent implements OnInit {\n  constructor(private userService: UserService) {}\n  public humans;\n\n  ngOnInit(): void {\n    this.getHumans();\n  }\n  getHumans() {\n    this.userService.listHuman().subscribe(\n      (data) => {\n        this.humans = data;\n      },\n\n      (err) => console.error(err),\n\n      () => console.log('done loading posts')\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'front-end';\n\n  constructor(public userService: UserService) {}\n\n  public user: any;\n\n  ngOnInit() {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { throwError } from 'rxjs';\nimport { stringify } from '@angular/compiler/src/util';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  constructor(private userService: UserService) {}\n  public new_human: {\n    first_name: string;\n    last_name: string;\n    rate_per_hour: number;\n    //picture: File;\n  };\n  cover: File;\n  profile: any;\n  ngOnInit(): void {\n    this.getProfile();\n    this.new_human = {\n      first_name: '',\n      last_name: '',\n      rate_per_hour: 0,\n      //picture: null,\n    };\n  }\n  onImageChanged(event: any) {\n    this.cover = event.target.files[0];\n  }\n  getProfile() {\n    this.userService.getProfile().subscribe(\n      (data) => {\n        console.log(data);\n        this.profile = data;\n      },\n\n      (error) => {\n        console.error('Error saving!');\n        return throwError(error);\n      }\n    );\n  }\n  createHuman() {\n    var formData = new FormData();\n    for (var [key, value] of Object.entries(this.new_human)) {\n      if (typeof value == 'number') value = String(value);\n      formData.append(key, value);\n    }\n\n    if (this.cover) {\n      formData.append('picture', this.cover);\n      //this.new_human.picture = this.cover;\n    }\n    console.log(this.new_human);\n    this.userService.createHuman(formData).subscribe(\n      (data) => {\n        window.location.reload();\n        return true;\n      },\n      (error) => {\n        console.error('Error saving!');\n        return throwError(error);\n      }\n    );\n  }\n}\n","<div class=\"row mb-3\" *ngIf=\"profile\">\n  <h2>This is how other users see you:</h2>\n  <mat-list>\n    <h3 matLine>{{ profile.first_name }} {{ profile.last_name }}</h3>\n    <p matLine>Your rate: {{ profile.rate_per_hour }}</p>\n    <p matLine class=\"demo-2\">You're in: {{ profile.city }}</p>\n    <img src=\"{{ profile.picture }}\" alt=\"image\" />\n  </mat-list>\n</div>\n\n<div *ngIf=\"!profile\">\n  <h3>Create your profile:</h3>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your first name</mat-label>\n    <input\n      matInput\n      placeholder=\"First Name\"\n      name=\"profile-first-name\"\n      [(ngModel)]=\"new_human.first_name\"\n    /> </mat-form-field\n  ><br />\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your last name</mat-label>\n    <input\n      matInput\n      placeholder=\"Last Name\"\n      name=\"profile-last-name\"\n      [(ngModel)]=\"new_human.last_name\" /></mat-form-field\n  ><br />\n  <mat-form-field appearance=\"fill\">\n    <mat-label>How much do you charge per hour:</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      placeholder=\"Rate per hour\"\n      name=\"profile_rate\"\n      [(ngModel)]=\"new_human.rate_per_hour\"\n  /></mat-form-field>\n\n  <input type=\"file\" name=\"picture\" (change)=\"onImageChanged($event)\" />\n\n  <br />\n  <button\n    (click)=\"createHuman()\"\n    mat-stroked-button\n    color=\"primary\"\n    class=\"btn btn-primary\"\n  >\n    Save\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserService } from './user.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { HeaderComponent } from './header/header.component';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PetsComponent } from './pets/pets.component';\nimport { HumansComponent } from './humans/humans.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SigninComponent,\n    SignupComponent,\n    PetsComponent,\n    HumansComponent,\n    HomeComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    FlexLayoutModule,\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<mat-toolbar color=\"primary\" class=\"sticky\">\n  <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n    <div fxLayout=\"row\">\n      <button mat-button routerLink=\"\">&#8962;</button>\n\n      <!--<div *ngIf=\"!deviceXs\" fxLayout=\"row\">\n        <div *ngIf=\"isLoggedIn\">\n          <button mat-button routerLink=\"pets\">Pets</button>\n          <button mat-button routerLink=\"humans\">Humans</button>\n        </div>\n        <div *ngIf=\"!isLoggedIn\">\n          <button mat-button routerLink=\"sign-in\">Sign in</button>\n          <button mat-button routerLink=\"sign-up\">Sign Up</button>\n        </div>\n      </div>-->\n      PetSitter\n    </div>\n    <div>\n      <button *ngIf=\"deviceXs\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n  <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\n    <button mat-button>Home</button>\n    <button mat-button>About us</button>\n    <button mat-button>Contact us</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private userService: UserService) {}\n  deviceXs = false;\n  isLoggedIn = false;\n  ngOnInit(): void {\n    if (this.userService.getToken()) this.isLoggedIn = true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { throwError } from 'rxjs';\n@Component({\n  selector: 'app-pets',\n  templateUrl: './pets.component.html',\n  styleUrls: ['./pets.component.scss'],\n})\nexport class PetsComponent implements OnInit {\n  public pets;\n  public new_pet: any;\n  constructor(private userService: UserService) {}\n  error = false;\n  getPets() {\n    this.userService.list().subscribe(\n      (data) => {\n        this.pets = data;\n        for (let post of this.pets) {\n          post.date = new Date(post.date);\n        }\n      },\n\n      (err) => {\n        console.error(err);\n        this.error = true;\n      }\n    );\n  }\n\n  createPet() {\n    this.userService.create(this.new_pet, this.userService.token).subscribe(\n      (data) => {\n        this.getPets();\n        return true;\n      },\n      (error) => {\n        console.error('Error saving!');\n        return throwError(error);\n      }\n    );\n  }\n  ngOnInit(): void {\n    this.getPets();\n    this.new_pet = {};\n  }\n}\n","<div *ngIf=\"!error\" class=\"container\">\n  <h2 class=\"mt-3\">Your pets:</h2>\n  <mat-list>\n    <mat-list-item *ngFor=\"let pet of pets\">\n      <hr />\n      <h3 matLine>Name: {{ pet.name }}</h3>\n      <p matLine>Species: {{ pet.species }}</p>\n      <p matLine class=\"demo-2\">Description: {{ pet.description }}</p>\n    </mat-list-item>\n  </mat-list>\n  <button mat-button routerLink=\"../humans\">Look for pet sitters</button>\n  <h3>Add a new pet to your profile:</h3>\n  <div class=\"form\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter your pets name</mat-label>\n      <input\n        matInput\n        placeholder=\"Name\"\n        name=\"login-username\"\n        [(ngModel)]=\"new_pet.name\"\n      /> </mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Describe your pet:</mat-label>\n      <textarea\n        matInput\n        placeholder=\"Description\"\n        name=\"pet-description\"\n        [(ngModel)]=\"new_pet.description\"\n      ></textarea></mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>What species is your pet:</mat-label>\n      <input\n        matInput\n        placeholder=\"Species\"\n        name=\"pet-species\"\n        [(ngModel)]=\"new_pet.species\" /></mat-form-field\n    ><br />\n    <button\n      (click)=\"createPet()\"\n      mat-stroked-button\n      color=\"primary\"\n      class=\"btn btn-primary\"\n    >\n      Save\n    </button>\n  </div>\n</div>\n<div *ngIf=\"error\">\n  <h2>\n    There was an error when attempting to get your pets make sure you're logged\n    in!\n  </h2>\n</div>\n","<div class=\"container\">\n  <div *ngIf=\"!token\" class=\"form\">\n    <h1>Create your account:</h1>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter your username</mat-label>\n      <input\n        matInput\n        placeholder=\"Username\"\n        name=\"login-username\"\n        [(ngModel)]=\"user.username\"\n      /> </mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter your password</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        placeholder=\"Password\"\n        name=\"login-password\"\n        [(ngModel)]=\"user.password\"\n      /> </mat-form-field\n    ><br />\n    <button (click)=\"login()\" mat-stroked-button color=\"primary\">\n      Sign up\n    </button>\n    <button routerLink=\"../sign-in\" color=\"primary\" mat-button>\n      Already have an account?\n    </button>\n  </div>\n\n  <div *ngIf=\"token\">\n    <div>\n      <h1>You are logged in as {{ name }}.</h1>\n      <br />\n      <button (click)=\"logout()\" class=\"btn btn-primary\">Log Out</button>&nbsp;\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  constructor(public userService: UserService) {}\n\n  user: any;\n  token: any;\n  ngOnInit(): void {\n    this.user = {\n      username: '',\n      password: '',\n    };\n    this.token = this.userService.getToken();\n  }\n  login() {\n    this.userService.register({\n      username: this.user.username,\n      password: this.user.password,\n    });\n  }\n\n  refreshToken() {\n    this.userService.refreshToken();\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { HumansComponent } from './humans/humans.component';\nimport { PetsComponent } from './pets/pets.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'sign-in', component: SigninComponent },\n  { path: 'sign-up', component: SignupComponent },\n  { path: 'pets', component: PetsComponent },\n  { path: 'humans', component: HumansComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: '', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private httpOptions: any;\n  public token: string;\n  public token_expires: Date;\n  public username: string;\n  public errors: any = [];\n  endpoint = '';\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n  }\n\n  public login(user) {\n    this.http\n      .post(\n        this.endpoint + '/api-token-auth/',\n        JSON.stringify(user),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          this.updateData(data['token']);\n          window.location.reload();\n        },\n        (error) => {\n          this.errors = 'Problem with logging in';\n        }\n      );\n  }\n  public register(user) {\n    this.http\n      .post(\n        this.endpoint + '/api/users',\n        JSON.stringify(user),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          console.log(data);\n          window.alert('Successfully registered accont');\n          window.location.reload();\n        },\n        (error) => {\n          this.errors = error['error'];\n        }\n      );\n  }\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('username');\n    window.location.reload();\n  }\n\n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n\n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n    sessionStorage.setItem('username', this.username);\n    sessionStorage.setItem('token', token);\n  }\n  public refreshToken() {\n    this.http\n      .post(\n        this.endpoint + '/api-token-refresh/',\n        JSON.stringify({ token: this.token }),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          this.updateData(data['token']);\n        },\n        (err) => {\n          this.errors = err['error'];\n        }\n      );\n  }\n  public getToken() {\n    return sessionStorage.getItem('token');\n  }\n\n  create(post, token) {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    return this.http.post(\n      this.endpoint + '/api/pets',\n      JSON.stringify(post),\n      httpOptions\n    );\n  }\n\n  list() {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    return this.http.get(this.endpoint + '/api/pets-for-user', httpOptions);\n  }\n  createHuman(human: FormData) {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    return this.http.put(this.endpoint + '/api/humans', human, httpOptions);\n  }\n  getProfile() {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    return this.http.get(this.endpoint + '/api/profile', httpOptions);\n  }\n\n  listHuman() {\n    return this.http.get(this.endpoint + '/api/humans');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}